from enum import Enum
from typing import TypeVar

from src.base_types import Unique

A = TypeVar("A", bound='Achievement')


class Achievement(Unique):
    def __init__(self, name: str, description: str, secret: bool = False, key: str = None):
        super().__init__(cls=self, key=key)
        self.name = name
        self.description = description
        self.secret = secret

    def __str__(self):
        return f'üîπ {self.name}'

    def __repr__(self):
        return self.__str__()

class Achievements(Enum):
    LVL_1 = Achievement("–¶–µ —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∞—Ç–æ–∫!", "–û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä—à–∏–π —Ä—ñ–≤–µ–Ω—å", key="ach_lvl1")

    # 2002 <...> 2006 are empty due to deletion of message count achievements.

    LVL_50 = Achievement("–ë–æ–≥–æ–ø–æ–¥–æ–±–Ω–∏–π", "–û—Ç—Ä–∏–º–∞–π—Ç–µ 50-–∏–π —Ä—ñ–≤–µ–Ω—å.", key="ach_lvl50")
    SKULL_EMOJI = Achievement("üíÄ", "–ü–æ—Å—Ç–∞–≤—Ç–µ —Ä–µ–∞–∫—Ü—ñ—é-–µ–º–æ–¥–∑—ñ —á–µ—Ä–µ–ø–∞.", True, key="ach_skull")
    BASE = Achievement("–ë–∞–∑–∞", "–ü–æ—Å—Ç–∞–≤—Ç–µ —Ä–µ–∞–∫—Ü—ñ—é-–µ–º–æ–¥–∑—ñ –∫–∞–≤—É–Ω–∞.", True, key="ach_watermelon")

    LVL_100 = Achievement("–ú—ñ—à–∞, —Ü–µ –ø—ñ–∑–¥–µ—Ü—å, –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π.", "–î–æ—Å—è–≥—Ç–∏ 100-–æ–≥–æ —Ä—ñ–≤–Ω—é!", key="ach_lvl100")

    INTERESTED = Achievement(
        "–ó–∞—ñ–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–∏–π –≤ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è—Ö.", "–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ª—é–±–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è.", key="ach_interested"

    )
    BALANCE_CHECKER = Achievement("–ê —à–æ —Ç–∞–∫ –º–∞–ª–æ?", "–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å.", True, key="ach_balance")
    BOMBAS = Achievement("–•—Ç–æ —Ç—É—Ç –±–æ–º–±–∏—Ç—å –ë—ñ–º–±–∞—Å?", "–ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –µ–º–æ–¥–∑—ñ –±–æ–º–±–∏.", True, key="ach_donbass")
