from enum import Enum
from typing import TypeVar

from src.base_types import Unique, Inventoriable
from src.models import User

T = TypeVar("T", bound="ShopItem")


class ItemValue:
    def __init__(self, code: str, payload):
        self.code = code
        self.payload = payload


class ShopItem(Unique, Inventoriable):
    __slots__ = ('uid', 'label', 'cost', 'emoji', 'value', 'description')

    uid_starter = 3000

    def __init__(self, uid: int, label: str, cost: int, emoji: str, value: ItemValue, description: str = None):
        self.label = label
        self.cost = cost

        self.value: ItemValue = value

        self.emoji = emoji
        self.description = description

        Unique.__init__(self, uid, self)
        Inventoriable.__init__(self, self.__str__(), self.description)

    def __str__(self):
        return f'üîª {self.label}'

    def __repr__(self):
        return self.__str__()

    async def give(self, user: User) -> ItemValue:
        """
        :param user: src.models.User
        :return: ItemValue(code, payload): Code - string name of ShopItem type, payload - it's actual value
        """

        match self.value.code:
            case "roles":
                discord_instance = await user.get_discord_instance()

                role = discord_instance.guild.get_role(self.value.payload)

                if role is not None:
                    await discord_instance.add_roles(role, reason=f"–ù–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ —Ä—ñ–≤–µ–Ω—å.")

                await user.add_inventory_item(self)

                return self.value

        # TODO: Add other items


class ShopItems(Enum):
    ROLE_PIZZA = ShopItem(
        3001, "Pizza", 100, "üçï", ItemValue("roles", 1041868323710840873)
    )

    ROLE_BURGER = ShopItem(
        3002, "Burger", 120, "üçî", ItemValue("roles", 1042198043992281118)
    )

    ROLE_LEGEND_OF_BOMBASS = ShopItem(
        3003, "–ü–∏–≤–æ \"–õ–µ–≥–µ–Ω–¥–∞ –î–æ–Ω–±–∞—Å—É\"", 700, "üç∫", ItemValue("roles", 1043201573762908270),
        description="–¢–µ —Å–∞–º–µ, –õ–ï–ì–ï–ù–î–ê–†–ù–ï –ø–∏–≤–æ - —Ç–µ–ø–µ—Ä –º–æ–∂–µ —Å—Ç–∞—Ç–∏ —É–∫—Ä–∞—Å–æ—é –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é!"
    )

    BAYRAKTAR = ShopItem(
        3004, "–î—Ä–æ–Ω \"–ë–∞–π—Ä–∞–∫—Ç–∞—Ä\"", 1300, "üõ©", ItemValue(
            "roles", 1064264410463481906),
        description="–î—Ä–æ–Ω \"–ë–∞–π—Ä–∞–∫—Ç–∞—Ä\" –∑–∞–±–µ–∑–ø–µ—á–∏—Ç—å –≤–∞–º —è—Å–∫—Ä–∞–≤—ñ –≤–∏–¥–∏ –Ω–∞ —Å—Ö—ñ–¥–Ω–æ–º—É –Ω–∞–ø—Ä—è–º–∫—É!"
    )

    NOSOK = ShopItem(
        3005, "–®–∫–∞—Ä–ø–µ—Ç–∫–∞ –ó–∞–ª—É–∂–Ω–æ–≥–æ", 2500, "üß¶", ItemValue(
            "roles", 1064265477490233554),
        description="–®–∫–∞—Ä–ø–µ—Ç–∫–∞ –ó–∞–ª—É–∂–Ω–æ–≥–æ, –≤—ñ–Ω –∑–∞–≥—É–±–∏–≤ —ó—ó –¥–µ—Å—å –ø—ñ–¥ –•–µ—Ä—Å–æ–Ω–æ–º."
    )

    ROSHEN = ShopItem(
        3006, "–ê–∫—Ü—ñ—è \"–†–û–®–ï–ù\"", 10000, "üç´", ItemValue(
            "roles", 1064265157972328623),
        description="–®–º–∞—Ç–æ–∫ –∞–∫—Ü—ñ—ó –∫–æ–º–ø–∞–Ω—ñ—ó ROSHEN. –ê –º–æ–∂–µ —Ç–æ –ø–∞—Å—Ç–∫–∞ –ü–æ—Ä–æ—à–µ–Ω–∫–∞ ¬Ø\\_(„ÉÑ)_/¬Ø"
    )



