import discord

from src import T84ApplicationContext, DefaultEmbed
from src.achievements import Achievement
from src.bot import T84
from src.models import User

class Profile(discord.Cog):
    def __init__(self, bot: T84):
        self.bot = bot

    @discord.slash_command(name='profile', description='üë§ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.')
    async def profile(
            self, ctx: T84ApplicationContext,
            member: discord.Option(discord.Member, description="üë§ –Æ–∑–µ—Ä") = None
    ):
        await ctx.defer()

        member = member or ctx.author

        user, _ = await User.get_or_create(discord_id=member.id)

        embed = await user.get_profile_embed()

        await ctx.respond(embed=embed)

    @discord.slash_command(name='balance', description='üë§ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å.')
    async def balance(self, ctx: T84ApplicationContext):
        await ctx.user_instance.add_achievement(Achievement.get_from_key("ach_balance"), notify_user=True)

        await ctx.respond(
            f"–í–∞—à –±–∞–ª–∞–Ω—Å: **{ctx.user_instance.balance}** üí∏ | **{ctx.user_instance.premium_balance}** üíé",
            ephemeral=True
        )

    @discord.slash_command(name='inventory', description='üë§ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–≤—ñ–π —ñ–Ω–≤–µ–Ω—Ç–∞—Ä.')
    async def inventory(
            self, ctx: T84ApplicationContext, member: discord.Option(discord.Member, description="üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á") = None
    ):
        member = member or ctx.author

        user_instance, _ = await User.get_or_create(discord_id=member.id)

        embed = DefaultEmbed()
        embed.title = f"–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.display_name}"

        desc = ""
        for item in user_instance.inventory:
            desc += f"**{item}**\n\n"

        embed.description = desc if desc else "*–ü—É—Å—Ç–æ* üò¢"

        await ctx.respond(embed=embed)


def setup(bot: T84):
    bot.add_cog(Profile(bot))
