import discord
from discord import SlashCommandGroup, ButtonStyle

import config
from src import T84ApplicationContext, DefaultEmbed, NotEnoughPremiumCurrency, CouldNotSendDM, boolean_emoji, \
    BattlePassLevels
from src.bot import T84
from src.models import User
from discord.ext.tasks import loop


class BattlePassCog(discord.Cog):
    def __init__(self, bot):
        self.bot: T84 = bot
        self.cache = []
        self.caching_loop.start()

    battlepass_commands = SlashCommandGroup(name='battlepass', description="üî∞ –ö–æ–º–∞–Ω–¥–∏ –±–∞—Ç—Ç–ª-–ø–∞—Å—Å—É")

    @battlepass_commands.command(name='profile', description='üî∞ –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —É –±–∞—Ç—Ç–ª-–ø–∞—Å—Å—ñ —Ü—å–æ–≥–æ —Å–µ–∑–æ–Ω—É.')
    async def battlepass_progress(
            self, ctx: T84ApplicationContext, #season: discord.Option(int, description="–°–µ–∑–æ–Ω") = config.CURRENT_BP_SEASON
    ):
        await ctx.defer()

        embed = await ctx.user_instance.get_battlepass_embed()

        await ctx.respond(embed=embed)

    # make it much user friendlier plspls me
    @battlepass_commands.command(name='rewards', description='üî∞ –°–ø–∏—Å–æ–∫ –Ω–∞–≥–æ—Ä–æ–¥ –±–∞—Ç—Ç–ª-–ø–∞—Å—Å—É –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–µ–∑–æ–Ω—É.')
    async def battlepass_rewards(self, ctx: T84ApplicationContext, level: int):
        rewards = BattlePassLevels.get_by_level(level)

        embed = DefaultEmbed()
        embed.title = f"–ù–∞–≥–æ—Ä–æ–¥–∏ {level}-–æ–≥–æ —Ä—ñ–≤–Ω—é | Battle Pass"
        embed.description = str(rewards if rewards else "*–ù–µ–º–∞—î :(*")

        await ctx.respond(embed=embed)

    @battlepass_commands.command(
        name='booster', description='üî∞ –Ø–∫—â–æ –≤–∏ –±—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä—É - –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞—Ç—Ç–ª-–ø–∞—Å—Å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ!'
    )
    async def battlepass_booster(self, ctx: T84ApplicationContext):
        booster_role = ctx.guild.get_role(self.bot.config.BOOSTER_ROLE)

        if not booster_role in ctx.user.roles:
            return await ctx.respond(
                "** ‚ùå –í–∏ –Ω–µ —î –±—É—Å—Ç–µ—Ä–æ–º —Å–µ—Ä–≤–µ—Ä—É!**\n"
                f"- –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–µ–º—ñ—É–º –±–∞—Ç—Ç–ª-–ø–∞—Å—Å –≤–∞–º —Ç—Ä–µ–±–∞ —Å—Ç–∞—Ç–∏ –±—É—Å—Ç–µ—Ä–æ–º —Å–µ—Ä–≤–µ—Ä—É!\n\n"
                f"*–ê–±–æ –ø—Ä–∏–¥–±–∞—Ç–∏ –π–æ–≥–æ –∑–∞ {config.BP_PREMIUM_COST} üíé, –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó -> "
                f"<#{config.DONATE_INFO_CHANNEL}>*",
                ephemeral=True
            )

        bp = await ctx.user_instance.get_battlepass_data()

        if bp.premium:
            return await ctx.respond(
                f"‚úÖ –í–∏ –≤–∂–µ –º–∞—î—Ç–µ **–ü—Ä–µ–º—ñ—É–º –±–∞—Ç—Ç–ª-–ø–∞—Å—Å `#{config.CURRENT_BP_SEASON}`**.", ephemeral=True
            )

        bp.premium = True
        await bp.save()

        await ctx.respond(
            f"‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–ª–∏ **–ü—Ä–µ–º—ñ—É–º –±–∞—Ç—Ç–ª-–ø–∞—Å—Å `#{config.CURRENT_BP_SEASON}`**!"
        )
        await BattlePassLevels.PAID_INSTANT.apply_all(user=ctx.user_instance)

    @battlepass_commands.command(
        name='buy', description=f"üî∞ –ö—É–ø–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º –±–∞—Ç—Ç–ª-–ø–∞—Å—Å —Ü—å–æ–≥–æ —Å–µ–∑–æ–Ω—É. [–¶—ñ–Ω–∞: {config.BP_PREMIUM_COST} üíé]"
    )
    async def battlepass_buy(self, ctx: T84ApplicationContext):
        if config.BP_PREMIUM_COST > ctx.user_instance.premium_balance:
            raise NotEnoughPremiumCurrency

        await ctx.defer(ephemeral=True)

        bp = await ctx.user_instance.get_battlepass_data()

        if bp.premium:
            return await ctx.respond(f"‚úÖ –í–∏ –≤–∂–µ –º–∞—î—Ç–µ **–ü—Ä–µ–º—ñ—É–º –±–∞—Ç—Ç–ª-–ø–∞—Å—Å #{config.CURRENT_BP_SEASON}**.")

        async def button_callback(interaction: discord.Interaction):
            if config.BP_PREMIUM_COST > ctx.user_instance.premium_balance:
                raise NotEnoughPremiumCurrency

            await ctx.user_instance.add_premium_balance(-config.BP_PREMIUM_COST)

            view.disable_all_items()

            await interaction.message.edit(view=view)

            bp.premium = True
            await bp.save()

            await interaction.response.send_message(content='‚úÖ –£—Å–ø—ñ—à–Ω–æ!')
            await BattlePassLevels.PAID_INSTANT.apply_all(user=ctx.user_instance)


        view = discord.ui.View(timeout=30.0, disable_on_timeout=True)
        button = discord.ui.Button(label="–¢–∞–∫!", emoji="‚úîÔ∏è", style=ButtonStyle.green)
        button.callback = button_callback

        view.add_item(button)

        embed = DefaultEmbed()
        embed.title = "–î–¢–í–£ | –ë–∞—Ç—Ç–ª-–ø–∞—Å—Å"
        embed.colour = discord.Colour.green()
        embed.description = f'–í–∏ –¥—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ "**–ü—Ä–µ–º—ñ—É–º –ë–∞—Ç—Ç–ª-–ü–∞—Å—Å #{config.CURRENT_BP_SEASON}**" ?\n\n' \
                            f'*–Ø–∫—â–æ –≤–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ - –ø—Ä–æ—Å—Ç–æ —ñ–≥–Ω–æ—Ä—É–π—Ç–µ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...*'

        try:
            await ctx.user_instance.send(embed=embed, view=view)
        except CouldNotSendDM:
            return await ctx.respond(
                "‚ùå **–ë–æ—Ç –Ω–µ –∑–º—ñ–≥ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤–∞–º –¥–æ __–õ–°__!**\n\n"
                f"–î–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –±–æ—Ç–æ–º {ctx.me.mention} "
                f"—Ç–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ –π–æ–º—É –ª—é–±–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É —â–µ —Ä–∞–∑."
            )

        await ctx.respond("‚òëÔ∏è –î–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π –ø–µ—Ä–µ–π–¥—ñ—Ç—å –≤ __–õ–°__ –¥–æ –±–æ—Ç–∞.", ephemeral=True)

    @discord.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.guild is None or message.author.bot or message.guild.id != self.bot.config.PARENT_GUILD:
            return

        if message.author.id in self.cache:
            return

        user, _ = await User.get_or_create(discord_id=message.author.id)
        bp = await user.get_battlepass_data()

        await bp.add_xp(config.BP_XP_PER_MESSAGE)
        affected, rewards = await bp.update_level()

        if affected:
            embed = DefaultEmbed()
            embed.title = "–í–∏ –¥–æ—Å—è–≥–ª–∏ –Ω–æ–≤–æ–≥–æ —Ä—ñ–≤–Ω—é –ë–∞—Ç—Ç–ª-–ü–∞—Å—Å—É!"

            if bp.premium:
                embed.colour = discord.Colour.blurple()

            embed.description = f'–ù–∞–≥–æ—Ä–æ–¥–∏:\n {rewards if rewards else "*–ù–∞ —Ü—å–æ–º—É —Ä—ñ–≤–Ω—ñ —î —Ç—ñ–ª—å–∫–∏ –ø—Ä–µ–º—ñ–∞–ª—å–Ω—ñ –Ω–∞–≥–æ—Ä–æ–¥–∏*"}'

            embed.add_field(name="üîò –î–æ—Å–≤—ñ–¥ BP", value=f'`{bp.xp}`')
            embed.add_field(name="‚ôæÔ∏è –†—ñ–≤–µ–Ω—å BP", value=f'`{bp.level}`')
            embed.add_field(name="üíé –ü—Ä–µ–º—ñ—É–º", value=boolean_emoji(bp.premium))

            embed.set_thumbnail(url='https://i.imgur.com/BapZMjf.png')

            await message.reply(embed=embed)

        self.cache.append(user.discord_id)

    @loop(minutes=4)
    async def caching_loop(self):
        self.cache.clear()

def setup(bot):
    bot.add_cog(BattlePassCog(bot))
